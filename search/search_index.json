{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Karned Rekipe Project Roadmap","text":"<p>Welcome to the Karned Rekipe Project Roadmap. This documentation serves as a comprehensive roadmap for the entire Karned Rekipe project, tracking progress and explaining each step of development.</p>"},{"location":"#overview","title":"Overview","text":"<p>This roadmap documentation is designed to help organize and track the development of the Karned Rekipe platform. It provides a clear view of what has been completed, what is currently in progress, and what is planned for the future.</p>"},{"location":"#how-to-use-this-roadmap","title":"How to Use This Roadmap","text":"<p>The roadmap is organized into three main sections:</p> <ul> <li>To Do - Tasks and features that are planned but not yet started</li> <li>In Progress - Tasks and features currently being worked on</li> <li>Completed - Tasks and features that have been finished</li> </ul> <p>Each task in the roadmap includes: - A detailed description - Priority level - Estimated completion time - Dependencies (if any) - Assigned team members (if applicable)</p>"},{"location":"#project-information","title":"Project Information","text":"<p>For a better understanding of the project:</p> <ul> <li>Architecture Overview - Learn about the overall system architecture</li> <li>Components - Detailed information about the different components of the system</li> </ul>"},{"location":"#development-resources","title":"Development Resources","text":"<ul> <li>Setup Guide - Information on setting up the development environment</li> <li>Contributing Guidelines - How to contribute to the project</li> <li>GitHub Pages - Information about the documentation deployment</li> </ul>"},{"location":"#support","title":"Support","text":"<p>If you need help or have questions about the roadmap, please contact the Karned team.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you get started with the API Recipe service.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following:</p> <ul> <li>Python 3.12 or higher</li> <li>Docker (optional, for containerized deployment)</li> <li>Access to the Karned platform</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#local-development","title":"Local Development","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/karned-rekipe/api-recipe.git\ncd api-recipe\n</code></pre></p> </li> <li> <p>Create a virtual environment and activate it:    <pre><code>python -m venv .venv\nsource .venv/bin/activate  # On Windows, use: .venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>Install dependencies:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Run the application:    <pre><code>uvicorn main:app --reload\n</code></pre></p> </li> </ol> <p>The API will be available at <code>http://localhost:8000</code>.</p>"},{"location":"getting-started/#docker-deployment","title":"Docker Deployment","text":"<ol> <li> <p>Build the Docker image:    <pre><code>docker build -t api-recipe --platform=linux/amd64 .\n</code></pre></p> </li> <li> <p>Run the container:    <pre><code>docker run -p 8000:8000 api-recipe\n</code></pre></p> </li> </ol>"},{"location":"getting-started/#configuration","title":"Configuration","text":"<p>The API Recipe service can be configured using environment variables or a configuration file. See the configuration documentation for more details.</p>"},{"location":"getting-started/#authentication","title":"Authentication","text":"<p>To authenticate with the API, you need to obtain an API token. See the authentication documentation for more details.</p>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<ul> <li>Explore the API Reference to learn about the available endpoints</li> <li>Learn about development and contributing to the project</li> </ul>"},{"location":"reflexion/","title":"Reflexion","text":"<p>J'ai un user_id Keycloak : d3f48a42-0d1e-4270-8e8e-549251cd823 il va me servir d'id utilisateur partout</p> <p>Nous vendons des licences  Un utilisateur ou une entreprise ach\u00e8te donc un ou des licences. Ces licences sont born\u00e9es dans le temps. Elles ont un iat et un exp (sur le principe d'un token) Une licence est unique et peut \u00eatre affect\u00e9e \u00e0 un utilisateur ou \"\u00e0 affecter\"</p> <p>Un utilisateur poss\u00e8de des licences d'utilisations.</p> <p>Une licence est donn\u00e9e pour un service. Un service (produit) liste les acc\u00e8s qu'il autorise.</p> <p>Ex : service api-recipe pour une licence qui ne donne acc\u00e8s qu'\u00e0 cela 'api-recipe-admin': {'roles': ['read','update','create','delete']}</p> <p>Ex : app-recipe-admin pour une licence qui donne acc\u00e8s \u00e0 toute l'application de cuisine 'api-recipe': {'roles': ['read','update','create','delete']}}, 'api-ingredient': {'roles': ['read','update','create','delete']}}, 'api-ustensile': {'roles': ['read','update','create','delete']}}, 'api-planning': {'roles': ['read','update','create','delete']}}</p> <p>Si l'utilisateur poss\u00e8de plusieurs licences, il devra en choisir une pour utiliser le service.</p> <p>Une licence d\u00e9finit les credentials \u00e0 utiliser. Les donn\u00e9es sont stock\u00e9s dans des bases de donn\u00e9es et bucket. Les donn\u00e9es sont manipul\u00e9es par les API. Les credentials peuvent donc \u00eatre d\u00e9finis de la mani\u00e8re suivante default : c'est celui utilis\u00e9 en l'absence de credentials particulier api-recipe : celui sp\u00e9cifique \u00e0 API Recipe</p> <p>Soit les \u00e9l\u00e9ments suivants :  - type = mongodb - host = 'localhost' - port = 27017 - db = \"local\" (optionnel  si non d\u00e9fini) - collection = \"recipes\" (optionnel recipes si non d\u00e9fini)</p> <p>une licence c'est :  - une p\u00e9riode : iat / exp - un produit - un user - des credentials</p> <p>un m\u00e9canisme se charge de modifier keycloak pour le faire correspondre \u00e0 ce que les licences repr\u00e9sentent</p> <p>il faut un outil de gestion de licence un outil de gestion utilisateur</p>"},{"location":"token_explain/","title":"Token explain","text":"<p>'exp': 1736932837, // Expiration 'iat': 1736931337, // D\u00e9but de validit\u00e9 'jti': '9374dcd6-3346-40a3-9519-b45c3d1c0ef6', // ID du token 'iss': 'https://iam.karned.bzh/realms/Karned', 'aud': ['karned','account','api-recipe'], // audiences 'sub': 'd3f48a42-0d1e-4270-8e8e-549251cd823d', 'typ': 'Bearer', 'azp': 'karned', 'sid': '09b95b0f-3f77-49f7-bf52-2bebe2669147', 'acr': '1', 'allowed-origins': ['http://localhost:8501','http://localhost:8000'], 'realm_access': {'roles': ['offline_access','uma_authorization','default-roles-karned']}, 'resource_access': {'account': {'roles': ['manage-account','manage-account-links','delete-account','view-profile']}, 'api-recipe': {'roles': ['read','update','create','delete']}}, // roles 'scope': 'profile email', 'email_verified': True, 'name': 'Killian KOPP', 'preferred_username': 'killian', 'given_name': 'Killian', 'family_name': 'KOPP', 'email': 'killiankopp@gmail.com', 'client_id': 'karned', 'username': 'killian', 'token_type': 'Bearer', 'active': True</p>"},{"location":"api/overview/","title":"API Reference Overview","text":"<p>This section provides detailed information about the API Recipe service endpoints, authentication methods, and response formats.</p>"},{"location":"api/overview/#base-url","title":"Base URL","text":"<p>The base URL for all API endpoints is:</p> <pre><code>https://api.karned.bzh/recipe/\n</code></pre> <p>For local development, the base URL is:</p> <pre><code>http://localhost:8000/\n</code></pre>"},{"location":"api/overview/#api-versions","title":"API Versions","text":"<p>The API Recipe service supports multiple API versions:</p> <ul> <li>v1: Current stable API</li> </ul> <p>To specify the API version, include it in the URL path:</p> <pre><code>https://api.karned.bzh/recipe/v1/\n</code></pre>"},{"location":"api/overview/#authentication","title":"Authentication","text":"<p>All API endpoints require authentication. The API Recipe service supports the following authentication methods:</p>"},{"location":"api/overview/#token-authentication","title":"Token Authentication","text":"<p>Most endpoints require a token in the <code>Authorization</code> header:</p> <pre><code>Authorization: Bearer &lt;your_token&gt;\n</code></pre>"},{"location":"api/overview/#api-key-authentication","title":"API Key Authentication","text":"<p>Some endpoints support License key authentication. Include the API key in the <code>X-License-Key</code> header:</p> <pre><code>X-License-Key: &lt;your_license_key&gt;\n</code></pre>"},{"location":"api/overview/#response-format","title":"Response Format","text":"<p>All API responses are in JSON format. A typical response has the following structure:</p> <pre><code>{\n  \"status\": \"success\",\n  \"data\": {\n    // Response data\n  },\n  \"message\": \"Operation completed successfully\"\n}\n</code></pre>"},{"location":"api/overview/#error-responses","title":"Error Responses","text":"<p>Error responses have the following structure:</p> <pre><code>{\n  \"status\": \"error\",\n  \"error\": {\n    \"code\": \"ERROR_CODE\",\n    \"message\": \"Error message\"\n  }\n}\n</code></pre>"},{"location":"api/overview/#next-steps","title":"Next Steps","text":"<ul> <li>Visit our Swagger Documentation for interactive API testing and exploration.</li> </ul>"},{"location":"development/contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to the Karned Rekipe project!</p> <p>To participate in this project, please contact the Karned team directly.</p> <p>We appreciate your interest and look forward to collaborating with you.</p>"},{"location":"development/github-pages/","title":"Deploying to GitHub Pages","text":"<p>This guide explains how to deploy the API Recipe documentation to GitHub Pages.</p>"},{"location":"development/github-pages/#automatic-deployment","title":"Automatic Deployment","text":"<p>The documentation is automatically deployed to GitHub Pages whenever changes are pushed to the <code>main</code> branch that modify files in the <code>docs/</code> directory or the <code>mkdocs.yml</code> file. This is handled by a GitHub Actions workflow.</p>"},{"location":"development/github-pages/#how-it-works","title":"How It Works","text":"<ol> <li>The GitHub Actions workflow is defined in <code>.github/workflows/deploy-docs.yml</code></li> <li>When changes are pushed to the <code>main</code> branch, the workflow:</li> <li>Sets up a Python environment</li> <li>Installs MkDocs and required dependencies</li> <li>Builds the documentation</li> <li>Deploys it to the <code>gh-pages</code> branch</li> <li>GitHub Pages serves the content from the <code>gh-pages</code> branch</li> </ol>"},{"location":"development/github-pages/#viewing-the-deployment-status","title":"Viewing the Deployment Status","text":"<p>You can check the status of the deployment in the \"Actions\" tab of the GitHub repository.</p>"},{"location":"development/github-pages/#manual-deployment","title":"Manual Deployment","text":"<p>If you need to deploy the documentation manually, you can do so using the MkDocs <code>gh-deploy</code> command.</p>"},{"location":"development/github-pages/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>MkDocs and required dependencies installed</li> </ul>"},{"location":"development/github-pages/#deployment-steps","title":"Deployment Steps","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/karned-rekipe/api-recipe.git\ncd api-recipe\n</code></pre></p> </li> <li> <p>Install the required dependencies:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Deploy to GitHub Pages:    <pre><code>mkdocs gh-deploy\n</code></pre></p> </li> </ol> <p>This command builds the documentation and pushes it to the <code>gh-pages</code> branch of the repository.</p>"},{"location":"development/github-pages/#forcing-deployment","title":"Forcing Deployment","text":"<p>If you need to force the deployment (overwriting existing content), use:</p> <pre><code>mkdocs gh-deploy --force\n</code></pre>"},{"location":"development/github-pages/#accessing-the-documentation","title":"Accessing the Documentation","text":"<p>Once deployed, the documentation is available at:</p> <p>https://karned-rekipe.github.io/api-recipe/</p>"},{"location":"development/github-pages/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/github-pages/#documentation-not-updating","title":"Documentation Not Updating","text":"<p>If the documentation is not updating after a push:</p> <ol> <li>Check the GitHub Actions workflow in the \"Actions\" tab</li> <li>Ensure the repository has GitHub Pages enabled in the repository settings</li> <li>Verify that the GitHub Pages source is set to the <code>gh-pages</code> branch</li> </ol>"},{"location":"development/github-pages/#local-testing","title":"Local Testing","text":"<p>To test the documentation locally before deployment:</p> <pre><code>mkdocs serve\n</code></pre> <p>This starts a local server at <code>http://localhost:8000</code> where you can preview the documentation.</p>"},{"location":"development/setup/","title":"Development Setup","text":"<p>This guide provides instructions for setting up a development environment for the API Recipe service.</p>"},{"location":"development/setup/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following installed:</p> <ul> <li>Python 3.12 or higher</li> <li>Git</li> <li>Docker (optional, for containerized development)</li> <li>Redis (for caching and session management)</li> </ul>"},{"location":"development/setup/#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone https://github.com/karned-rekipe/api-recipe.git\ncd api-recipe\n</code></pre>"},{"location":"development/setup/#virtual-environment","title":"Virtual Environment","text":"<p>It's recommended to use a virtual environment for development:</p> <pre><code>python -m venv .venv\nsource .venv/bin/activate  # On Windows, use: .venv\\Scripts\\activate\n</code></pre>"},{"location":"development/setup/#install-dependencies","title":"Install Dependencies","text":"<p>Install the required dependencies:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>For development, you may also want to install additional packages:</p> <pre><code>pip install pytest pytest-cov black isort flake8\n</code></pre>"},{"location":"development/setup/#configuration","title":"Configuration","text":"<p>The API Recipe service uses environment variables for configuration. Create a <code>.env</code> file in the root directory with the following variables:</p> <pre><code># API Configuration\nPYTHONUNBUFFERED=True\nWORKERS=1\nAPI_NAME=api-recipe\nAPI_TAG_NAME=recipes\n\n# Keycloak Configuration\nKEYCLOAK_HOST=\nKEYCLOAK_REALM=\nKEYCLOAK_CLIENT_ID=\nKEYCLOAK_CLIENT_SECRET=\n\n# Redis Configuration\nREDIS_HOST=localhost\nREDIS_PORT=6379\nREDIS_DB=0\nREDIS_PASSWORD=\n</code></pre>"},{"location":"development/setup/#database-setup","title":"Database Setup","text":"<p>The API Recipe service uses Redis for caching and session management. Make sure Redis is running:</p> <pre><code># Start Redis using Docker\ndocker run --name redis -p 6379:6379 -d redis\n\n# Or if you have Redis installed locally\nredis-server\n</code></pre>"},{"location":"development/setup/#running-the-application","title":"Running the Application","text":"<p>Start the application in development mode:</p> <pre><code>uvicorn main:app --reload --host 0.0.0.0 --port 8000\n</code></pre> <p>The API will be available at <code>http://localhost:8000</code>.</p>"},{"location":"development/setup/#api-documentation","title":"API Documentation","text":"<p>The API documentation is available at <code>http://localhost:8000/docs</code> when the application is running.</p>"},{"location":"development/setup/#running-tests","title":"Running Tests","text":"<p>Run the tests using pytest:</p> <pre><code>pytest\n</code></pre> <p>To generate a coverage report:</p> <pre><code>pytest --cov=.\n</code></pre>"},{"location":"development/setup/#code-formatting","title":"Code Formatting","text":"<p>Format your code using Black and isort:</p> <pre><code>black .\nisort .\n</code></pre> <p>Check for linting issues:</p> <pre><code>flake8\n</code></pre>"},{"location":"development/setup/#debugging","title":"Debugging","text":"<p>For debugging, you can use the built-in debugger in your IDE or the Python debugger (pdb).</p> <p>To use pdb, add the following line where you want to set a breakpoint:</p> <pre><code>import pdb; pdb.set_trace()\n</code></pre>"},{"location":"development/setup/#documentation","title":"Documentation","text":"<p>The project documentation is built using MkDocs. To build and serve the documentation locally:</p> <pre><code>mkdocs serve\n</code></pre> <p>The documentation will be available at <code>http://localhost:8000</code>.</p>"}]}